# This GitHub documentation outlines the Build workflow, which is responsible for building and deploying a Docker image for the project.
# The Build workflow is triggered on pushes to the main branch. It consists of two jobs: sonarcloud, build, and deploy.

name: Build

on:
  push:
    branches: [ "main" ]

jobs:
  sonarcloud:
    runs-on: self-hosted
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened')) }}
    steps:
      - name: Checkout code analyze with sonarcloud # You can pin the exact commit or the version.
      # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        uses: actions/checkout@v2
        with: # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)

  build:
    runs-on: self-hosted
    steps:
      # Checks out the code from the repository using the actions/checkout action.
      - uses: actions/checkout@v3
      # Builds a Docker image tagged with imagename.
      - name: Build and push Docker image
        run: |
          docker build -t newflask .
          docker tag newflask anieelorez/newflask:latest
          docker login -u ${{ secrets.Dockerhub_username }} -p ${{ secrets.Dockerhub_token }}
          docker push anieelorez/newflask:latest
        env:
          DOCKER_CLI_ACI: 1

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      # Pulls the Docker image anieelorez/newflask:latest from Docker Hub.
      - name: Docker pull image
        run: docker pull anieelorez/newflask:latest
      # Scans the Docker image using Trivy and saves the scan results to trivyimagedeploy.txt.
      - name: Image scan
        run: trivy image anieelorez/newflask:latest > trivyimagedeploy.txt
      # Runs a Docker container named newflask from the pulled Docker image, mapping port 3000 on the host to port 3000 on the container.
      - name: Deploy to container
        run: docker run -d --name newflask -p 3000:3000 anieelorez/newflask:latest
      # Updates the Kubernetes configuration (kubeconfig) for the Azure Kubernetes Service (AKS) cluster named my-aks-cluster in the  CentralUS region.
      - name: Update kubeconfig
        run: az aks get-credentials --resource-group <rg> --name <my-aks-cluster>
      # Applies the Kubernetes deployment and service configurations defined in deployment-service.yml.
      - name: Deploy to Kubernetes
        run: kubectl apply -f deployment-service.yml
